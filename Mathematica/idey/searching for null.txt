fuhk_if_Null (x0, x1, x2, n) {
   k=[abs(x0-x1),0]
   dx=abs(x2-x1)/n
   цикл i++ i=[1;n-1]{
      if ((x1+(i-1)*dx)-abs(x1+(i-1)*dx))/(2*(x1+(i-1)*dx))!=((x1+i*dx)-abs(x1+i*dx))/(2*(x1+i*dx)){
         if (abs(x0-(x1+(i-1)*dx))<abs(x0-k[1])) {k=[x1+(i-1)*dx, x1+i*dx]}
      }
   }
return(k)
}


если (xi+|xi|)/2*xi != (x(i+1)+|x(i+1)|)/2*x(i+1)
то хотябы один ноль находится в интервале [xi, x(i+1)]
проверяем на наличие нулей первую половину интервала [xi, 0.5(xi+x(i+1)]
если там есть нули то работаем с этой половиной интервала
если нулей в этой половине нет, то работаем с другой половиной интервала
проверяем модуль разницы границ |xi-0.5(xi+x(i+1)|, если он меньше заданой нами точности, то xi искомый ноль, иначе вновь делим интервал на две половины и повторяем предыдущие действия начиная с проверки половинки интервала на нули
наверное стоит проверять на нули сразу обе части, если ноль пропадает сразу в двух, то мы разделили интервал по нулю и тогда расматривается интервал [0.3(xi+x(i+1), 0.7(xi+x(i+1)]
